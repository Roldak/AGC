with GC;
with GC.Storage;
with System;
with Ada.Unchecked_Conversion;
procedure Test is
   AGC_Base_Root_Count : Natural := GC.Root_Count;
   pragma Default_Storage_Pool (GC.Storage.Pool);
   type Integer_Access is access all Integer;
   procedure AGC_Visit_Test_Integer_Access is new GC.Visit_Access_Type
     (Integer, Integer_Access, GC.No_Op);
   X : aliased Integer_Access := new Integer'(1);
begin
   GC.Push_Root (X'Address, AGC_Visit_Test_Integer_Access'Address);
   declare
      Y : aliased Integer_Access := new Integer'(2);
   begin
      GC.Push_Root (Y'Address, AGC_Visit_Test_Integer_Access'Address);
      declare
         Z : aliased Integer_Access := new Integer'(3);
      begin
         GC.Push_Root (Z'Address, AGC_Visit_Test_Integer_Access'Address);
         declare
            A : aliased Integer_Access := new Integer'(4);
         begin
            GC.Push_Root (A'Address, AGC_Visit_Test_Integer_Access'Address);
            declare
               B : aliased Integer_Access := new Integer'(5);
            begin
               GC.Push_Root (B'Address, AGC_Visit_Test_Integer_Access'Address);
               declare
                  C : aliased Integer_Access := new Integer'(6);
               begin
                  GC.Push_Root
                    (C'Address, AGC_Visit_Test_Integer_Access'Address);
                  null;
               end;
            end;
         end;
      end;
   end;
   GC.Pop_Roots (AGC_Base_Root_Count);
end Test;
