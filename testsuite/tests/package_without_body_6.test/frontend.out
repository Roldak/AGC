package body Pkg is
   procedure AGC_Visit_Rec (X : System.Address) is
      pragma Suppress (All_Checks);
      type Rec_Access is access Rec with
        Storage_Size => 0;
      for Rec_Access'Size use Standard'Address_Size;
      function Conv is new Ada.Unchecked_Conversion
        (System.Address, Rec_Access);
      R : Rec renames Conv (X).all;
   begin
      Pkg.AGC_Visit_T_Private (R.X'Address);
   end AGC_Visit_Rec;
end Pkg;
with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
generic
   type T is private;
   with procedure AGC_Visit_T_Private (X : System.Address);
package Pkg is
   type Rec is record
      X : T;
   end record;
   procedure AGC_Visit_Rec (X : System.Address) with
     Inline;
end Pkg;
with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
with Pkg;

procedure Test is
   package I is new Pkg (Integer, AGC_Visit_T_Private => AGC.No_Op);
begin
   null;
end Test;
