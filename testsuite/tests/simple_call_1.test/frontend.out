with GC;
with GC.Storage;
with System;
with Ada.Unchecked_Conversion;
with Ada.Text_IO; use Ada.Text_IO;
procedure Test is
   AGC_Base_Root_Count : Natural := GC.Root_Count;
   pragma Default_Storage_Pool (GC.Storage.Pool);
   type Integer_Access is access all Integer;
   procedure AGC_Visit_Test_Integer_Access is new GC.Visit_Access_Type
     (Integer, Integer_Access, GC.No_Op);
   procedure Inner (X : Integer_Access) is
      AGC_Base_Root_Count : Natural                := GC.Root_Count;
      Y                   : aliased Integer_Access := new Integer'(2);
   begin
      GC.Push_Root (Y'Address, AGC_Visit_Test_Integer_Access'Address);
      null;
      GC.Pop_Roots (AGC_Base_Root_Count);
   end Inner;
   A : aliased Integer_Access := new Integer'(1);
begin
   GC.Push_Root (A'Address, AGC_Visit_Test_Integer_Access'Address);
   Inner (A);
   GC.Collect;
   GC.Pop_Roots (AGC_Base_Root_Count);
end Test;
