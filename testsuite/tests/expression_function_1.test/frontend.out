with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
procedure Test is
   pragma Default_Storage_Pool (AGC.Storage.Get.Pool);
   type Integer_Access is access Integer;
   procedure AGC_Visit_Integer_Access (X : System.Address);
   procedure AGC_Visit_Integer_Access_Implem is new AGC.Visit_Access_Type
     (Standard.Integer, False, AGC.No_Op);
   procedure AGC_Visit_Integer_Access (X : System.Address) renames
     AGC_Visit_Integer_Access_Implem;
   function Incr (X : Integer_Access) return Integer_Access;
   function Incr (X : Integer_Access) return Integer_Access is
   begin
      return AGC_Ret : Integer_Access := (new Integer'(X.all + 1)) do
         null;
      end return;
   end Incr;
begin
   null;
end Test;
