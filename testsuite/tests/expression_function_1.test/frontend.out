with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with AGC.Storage.Controlled;
with System;
with Ada.Unchecked_Conversion;
procedure Test is
   type Integer_Access is access Integer;
   for Integer_Access'Storage_Pool use AGC.Storage.Get.Pool;
   procedure AGC_Visit_Integer_Access (X : System.Address);
   package AGC_Integer_Access_Ops_Implem is new AGC.Access_Type_Operations
     (Standard.Integer, Integer_Access, False, AGC.No_Op);
   procedure AGC_Visit_Integer_Access (X : System.Address) renames
     AGC_Integer_Access_Ops_Implem.Mark_And_Visit_Access_Type;
   function AGC_Register_Integer_Access
     (X : Integer_Access) return Integer_Access;
   function AGC_Register_Integer_Access
     (X : Integer_Access) return Integer_Access renames
     AGC_Integer_Access_Ops_Implem.Register;
   function Incr (X : Integer_Access) return Integer_Access;
   function Incr (X : Integer_Access) return Integer_Access is
   begin
      return
        AGC_Ret : Integer_Access :=
          (Test.AGC_Register_Integer_Access
             (Test.Integer_Access'(new Integer'(X.all + 1))))
      do
         null;
      end return;
   end Incr;
begin
   null;
end Test;
