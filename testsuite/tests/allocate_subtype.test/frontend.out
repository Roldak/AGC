with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
procedure Test is
   AGC_Base_Root_Count : constant Natural := AGC.Root_Count;
   subtype My_Natural is Integer range 0 .. Integer'Last;
   type My_Nat_Access is access My_Natural with
      Storage_Pool => AGC.Storage.Get.Pool;
   procedure AGC_Visit_My_Nat_Access (X : System.Address);
   procedure AGC_Visit_My_Nat_Access_Implem is new AGC.Visit_Access_Type
     (Test.My_Natural, False, AGC.No_Op);
   procedure AGC_Visit_My_Nat_Access (X : System.Address) renames
     AGC_Visit_My_Nat_Access_Implem;
   X           : aliased My_Nat_Access   := new My_Natural'(2);
   AGC_Dummy_0 : constant AGC.Empty_Type :=
     AGC.Push_Root (X'Address, Test.AGC_Visit_My_Nat_Access'Address);
begin
   AGC.Collect;
   AGC.Pop_Roots (AGC_Base_Root_Count);
end Test;
