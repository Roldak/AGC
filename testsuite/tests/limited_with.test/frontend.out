with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
with Q;
package body P is
   procedure AGC_Visit_U_Access_Implem is new AGC.Visit_Access_Type
     (Q.U, False, Q.AGC_Visit_U);
   procedure AGC_Visit_U_Access (X : System.Address) renames
     AGC_Visit_U_Access_Implem;
   procedure AGC_Visit_Rec (X : System.Address) is
      pragma Suppress (Accessibility_Check);
      type Rec_Access is access all Rec;
      for Rec_Access'Size use Standard'Address_Size;
      function Conv is new Ada.Unchecked_Conversion
        (System.Address, Rec_Access);
      R : Rec renames Conv (X).all;
   begin
      declare
         C : aliased P.U_Access := R.X;
      begin
         P.AGC_Visit_U_Access (C'Address);
      end;
   end AGC_Visit_Rec;
   procedure Bar (X : Rec) is
   begin
      null;
   end Bar;
end P;
with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
limited with Q;
package P is
   type U_Access is access Q.U with
      Storage_Pool => AGC.Storage.Get.Pool;
   procedure AGC_Visit_U_Access (X : System.Address);
   type Rec is record
      X : U_Access;
   end record;
   procedure AGC_Visit_Rec (X : System.Address);
   procedure Bar (X : Rec);
end P;
with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
package body Q is
   procedure AGC_Visit_U (X : System.Address) is
      pragma Suppress (Accessibility_Check);
      type Rec_Access is access all U;
      for Rec_Access'Size use Standard'Address_Size;
      function Conv is new Ada.Unchecked_Conversion
        (System.Address, Rec_Access);
      R : U renames Conv (X).all;
   begin
      declare
         C : aliased P.Rec := R.Y;
      begin
         P.AGC_Visit_Rec (C'Address);
      end;
   end AGC_Visit_U;
   procedure Foo (X : U) is
   begin
      null;
   end Foo;
end Q;
with AGC;
with AGC.Standard;
with AGC.Storage.Get;
with System;
with Ada.Unchecked_Conversion;
with P;
package Q is
   type U is record
      Y : P.Rec;
   end record;
   procedure AGC_Visit_U (X : System.Address);
   procedure Foo (X : U);
end Q;
