with GC;
with GC.Standard; use GC.Standard;
with Ada.Text_IO; use Ada.Text_IO;
procedure Test is
   AGC_Base_Root_Count : Natural := GC.Root_Count;
   type Integer_Access is access all Integer;
   function AGC_Register is new GC.Register (Integer_Access);
   function AGC_Temp is new GC.Temp (Integer_Access);
   procedure Foo (N : Integer_Access) is
      AGC_Base_Root_Count : Natural                := GC.Root_Count;
      X : aliased Integer_Access := AGC_Register (new Integer'(N.all + 1));
   begin
      GC.Push_Root (X'Address);
      if X.all < 100 then
         Foo (X);
      end if;
      GC.Pop_Roots (AGC_Base_Root_Count);
   end Foo;
begin
   declare
      AGC_Root_Count : Natural                     := GC.Root_Count;
      AGC_Temp_0     : aliased Test.Integer_Access :=
        AGC_Register (new Integer'(0));
   begin
      GC.Push_Root (AGC_Temp_0'Address);
      Foo (AGC_Temp_0);
      GC.Pop_Roots (AGC_Root_Count);
   end;
   GC.Collect;
   GC.Pop_Roots (AGC_Base_Root_Count);
end Test;
