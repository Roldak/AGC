library project AGC_Task_Safe_Runtime is
   type AGC_Pool_Type is ("dynamic", "malloc_free");

   type Locking_Type is ("synchronize", "retry_loop");

   AGC_Pool : AGC_Pool_Type := external("AGC_POOL", "malloc_free");
   Locking  : Locking_Type := external("LOCKING", "retry_loop");

   Qualifier := "ts-" & AGC_Pool & "_" & Locking;

   for Source_Dirs use
     ("src-ts", "src-common",
      "src-ts/get_" & AGC_Pool,
      "src-ts/lock_" & Locking);
   for Object_Dir use "obj/" & Qualifier;
   for Library_Dir use "bin/" & Qualifier;
   for Library_Name use "agc_task_safe_runtime";

   package Compiler is
      Mode := external("BUILD_MODE", "release");
      case Mode is
         when "debug" | "dev" =>
            for Switches ("Ada") use ("-g");
         when "release" | "prod" =>
            for Switches ("Ada") use ("-g", "-O3", "-flto", "-gnatp");
         when others =>
            null;
      end case;
   end Compiler;
end AGC_Task_Safe_Runtime;
